class Node: #define node
    def __init__(self, data):
        self.data = data
        self.next = None

class linkedlist: #define linkedlist
    def __init__(self):
        self.head = None
        
    def Index(self,index):
        current_node = self.head
        position = 0
        while current_node is not None and position != index:
            position += 1
            current_node = current_node.next
        return current_node
        
    def putatbeginning(self, data): #insert starting node
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
            return
        else:
            new_node.next = self.head
            self.head = new_node

    def insert_sorter(self, data, index): #insert the sorter for the shop
        new_node = Node(data)
        current_node = self.head
        position = 0 
        if position == index:
            self.insert_sorter(data)
        else:
            while(current_node != None and position+1 != index):
                position = position+1
                current_node = current_node.next
            
            if current_node != None:
                new_node.next = current_node.next
                current_node.next = new_node
            
            else:
                print("That index isn't here, sorry!")
    
    def putatend(self, data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
            return
    
        current_node = self.head
        while(current_node.next):
            current_node = current_node.next
    
        current_node.next = new_node

    def replacenode(self, value, index): #change the node/toy piece
        current_node = self.head
        position = 0
        if position == index:
            current_node.data = value
        else:
            while(current_node != None and position != index):
                position = position+1
                current_node = current_node.next
    
            if current_node != None:
                current_node.data = value
            else:
                print("That index isn't here, sorry!")

    def takefirstnode(self):
        if(self.head == None):
            return
        
        self.head = self.head.next

    
    def height_display(self): #display the stacker
        current_node = self.head
        while current_node:
            next
