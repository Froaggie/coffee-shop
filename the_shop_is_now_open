class Node: #define node
    def __init__(self, data):
        self.data = data
        self.next = None

class linkedlist: #define linkedlist
    def __init__(self):
        self.head = None
        
    def Index(self,index):
        current_node = self.head
        position = 0
        while current_node is not None and position != index:
            position += 1
            current_node = current_node.next
        return current_node
        
    def putatbeginning(self, data): #insert starting node
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
            return
        else:
            new_node.next = self.head
            self.head = new_node

    def insert_sorter(self, data, index): #insert the sorter for the shop
        new_node = Node(data)
        current_node = self.head
        position = 0 
        if position == index:
            self.insert_sorter(data)
        else:
            while(current_node != None and position+1 != index):
                position = position+1
                current_node = current_node.next
            
            if current_node != None:
                new_node.next = current_node.next
                current_node.next = new_node
            
            else:
                print("That index isn't here, sorry!")
    
    def putatend(self, data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
            return
    
        current_node = self.head
        while(current_node.next):
            current_node = current_node.next
    
        current_node.next = new_node

    def replacenode(self, value, index): #change the node
        current_node = self.head
        position = 0
        if position == index:
            current_node.data = value
        else:
            while(current_node != None and position != index):
                position = position+1
                current_node = current_node.next
    
            if current_node != None:
                current_node.data = value
            else:
                print("That index isn't here, sorry!")

    def takefirstnode(self):
        if(self.head == None):
            return
        
        self.head = self.head.next

    
    def height_display(self): #display the shop
        current_node = self.head
        while current_node:
            print(current_node.data)
            current_node = current_node.next

    def gimmiedata(self):
        current_node = self.head
        return current_node.data
    
def coffeeshop(): #define the intro and how the shop runs
    coffeeline = linkedlist()
    coffeeorder = linkedlist()
    true = True
    print("Hello there! Welcome to the coffee shop! Would you like to place an order? (y/n) \n ======== Coffee Shop ======== \n") #intro to the shop
    while true:
        option = input()
        if option.lower() in ["y","yes"] or (option == "1"):
            coffeeorder.putatend(input("Please insert your drink order! \n")) #take drink order
            coffeeline.putatend(input("What is the name for the order? \n")) #take name for the order
        if option.lower() in ["n","no"] or (option == "0"):
            workers = input("Has an order been completed? (y/n) \n")
            if workers.lower() in ["y","yes"] or (workers == "1"):
                name = coffeeline.gimmiedata()
                drink = coffeeorder.gimmiedata()
                print(f"\n {name}'s order of {drink} is ready!")
                coffeeline.takefirstnode()
                coffeeorder.takefirstnode()
        print("Welcome to the coffee shop! Would you like to place an order? (y/n) \n ======== Coffee Shop ======== \n The current queue is:"), coffeeline.height_display() #show queue


coffeeshop() #run the main code
